//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService7")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Store", Namespace="http://schemas.datacontract.org/2004/07/WcfService7")]
    [System.SerializableAttribute()]
    public partial class Store : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BID {
            get {
                return this.BIDField;
            }
            set {
                if ((this.BIDField.Equals(value) != true)) {
                    this.BIDField = value;
                    this.RaisePropertyChanged("BID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CT {
            get {
                return this.CTField;
            }
            set {
                if ((object.ReferenceEquals(this.CTField, value) != true)) {
                    this.CTField = value;
                    this.RaisePropertyChanged("CT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FN {
            get {
                return this.FNField;
            }
            set {
                if ((object.ReferenceEquals(this.FNField, value) != true)) {
                    this.FNField = value;
                    this.RaisePropertyChanged("FN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LN {
            get {
                return this.LNField;
            }
            set {
                if ((object.ReferenceEquals(this.LNField, value) != true)) {
                    this.LNField = value;
                    this.RaisePropertyChanged("LN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MN {
            get {
                return this.MNField;
            }
            set {
                if ((object.ReferenceEquals(this.MNField, value) != true)) {
                    this.MNField = value;
                    this.RaisePropertyChanged("MN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ConsoleApp1.ServiceReference1.CompositeType GetDataUsingDataContract(ConsoleApp1.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ConsoleApp1.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMethod", ReplyAction="http://tempuri.org/IService1/AddMethodResponse")]
        string AddMethod(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMethod", ReplyAction="http://tempuri.org/IService1/AddMethodResponse")]
        System.Threading.Tasks.Task<string> AddMethodAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MultiplyMethod", ReplyAction="http://tempuri.org/IService1/MultiplyMethodResponse")]
        string MultiplyMethod(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MultiplyMethod", ReplyAction="http://tempuri.org/IService1/MultiplyMethodResponse")]
        System.Threading.Tasks.Task<string> MultiplyMethodAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStoresFromvStoreWithContacts", ReplyAction="http://tempuri.org/IService1/GetAllStoresFromvStoreWithContactsResponse")]
        ConsoleApp1.ServiceReference1.Store[] GetAllStoresFromvStoreWithContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStoresFromvStoreWithContacts", ReplyAction="http://tempuri.org/IService1/GetAllStoresFromvStoreWithContactsResponse")]
        System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.Store[]> GetAllStoresFromvStoreWithContactsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ConsoleApp1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ConsoleApp1.ServiceReference1.IService1>, ConsoleApp1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ConsoleApp1.ServiceReference1.CompositeType GetDataUsingDataContract(ConsoleApp1.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ConsoleApp1.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string AddMethod(int x, int y) {
            return base.Channel.AddMethod(x, y);
        }
        
        public System.Threading.Tasks.Task<string> AddMethodAsync(int x, int y) {
            return base.Channel.AddMethodAsync(x, y);
        }
        
        public string MultiplyMethod(int x, int y) {
            return base.Channel.MultiplyMethod(x, y);
        }
        
        public System.Threading.Tasks.Task<string> MultiplyMethodAsync(int x, int y) {
            return base.Channel.MultiplyMethodAsync(x, y);
        }
        
        public ConsoleApp1.ServiceReference1.Store[] GetAllStoresFromvStoreWithContacts() {
            return base.Channel.GetAllStoresFromvStoreWithContacts();
        }
        
        public System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.Store[]> GetAllStoresFromvStoreWithContactsAsync() {
            return base.Channel.GetAllStoresFromvStoreWithContactsAsync();
        }
    }
}
